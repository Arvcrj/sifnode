# Default values for siftest.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
image:
  repository: ghcr.io/sifchain/sifnode/sifdocker
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: "siftest"
fullnameOverride: "siftest"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

persistence:
  enabled: true

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

pvcs:
   claim0: 5Gi
   claim1: 1Gi
   claim2: 2Gi
   claim3: 1Gi
   claim4: 1Gi

vm:
   claim0: /sifnode
   claim1: /configs
   claim2: /logs
   claim3: /gobin
   claim4: /gocache

ports:
  - 26657
  - 8646
  - 7990
  - 80

deployment:
  containers:
  - name: geth
    image: ghcr.io/sifchain/sifnode/sifdocker:latest
    args: ["bash", "-c", "PATH=${PATH}:/gobin python3 -u src/py/env_framework.py geth"]
    ports:
    - containerPort: 8646
    - containerPort: 7990
  - name: ebrelayer1
    image: ghcr.io/sifchain/sifnode/sifdocker:latest
    args: ["bash", "-c", "PATH=${PATH}:/gobin python3 -u src/py/env_framework.py ebrelayer1"]
  - name: sifnoded
    image: ghcr.io/sifchain/sifnode/sifdocker:latest
    args: ["bash", "-c", "PATH=${PATH}:/gobin python3 -u src/py/env_framework.py startsifnoded"]
    ports:
    - containerPort: 26657
  - name: testrunner
    image: ghcr.io/sifchain/sifnode/sifdocker:latest
    args: ["bash", "-c", "PATH=${PATH}:/gobin python3 -u src/py/env_framework.py testrunner"]

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: testrunner
  name: testrunner
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: testrunner
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/sifchaintest: "true"
        io.kompose.service: testrunner
    spec:
      containers:
        - args:
            - bash
            - -c
            - cd /sifnode/test/integration && python3 -u src/py/env_framework.py testrunner
          image: ghcr.io/sifchain/sifnode/sifdocker:latest
          name: testrunner
          resources: {}
          volumeMounts:
            - mountPath: /sifnode
              name: claim0
            - mountPath: /configs
              name: claim1
            - mountPath: /logs
              name: claim2
            - mountPath: /gobin
              name: claim3
            - mountPath: /gocache
              name: claim4
          workingDir: /sifnode/test/integration
      initContainers:
      - name: git-cloner
        image: alpine/git
        args:
           - clone
           - --single-branch
           - --
           - https://github.com/Sifchain/sifnode.git
           - /sifnode
        volumeMounts:
        - mountPath: /sifnode
          name: claim0
      restartPolicy: Always
      volumes:
        - name: claim0
          persistentVolumeClaim:
            claimName: claim0
        - name: claim1
          persistentVolumeClaim:
            claimName: claim1
        - name: claim2
          persistentVolumeClaim:
            claimName: claim2
        - name: claim3
          persistentVolumeClaim:
            claimName: claim3
        - name: claim4
          persistentVolumeClaim:
            claimName: claim4
status: {}

DEBUG    root:test_utilities.py:117 execute shell command:
yarn -s --cwd /Users/kevindegraaf/sifnode/smart-contracts integrationtest:ganacheAccounts
DEBUG    root:test_utilities.py:121 execute shell command stdout:
Using network 'ganache'.

{"accounts":["0x627306090abaB3A6e1400e9345bC60c78a8BEf57","0xf17f52151EbEF6C7334FAD080c5704D77216b732","0xC5fdf4076b8F3A5357c5E395ab970B5B54098Fef","0x821aEa9a577a9b44299B9c15c88cf3087F3b5544","0x0d1d4e623D10F9FBA5Db95830F7d3839406C6AF2","0x2932b7A2355D6fecc4b5c0B6BD44cC31df247a2e","0x2191eF87E392377ec08E7c08Eb105Ef5448eCED5","0x0F4F2Ac550A1b4e2280d04c21cEa7EBD822934b5","0x6330A553Fc93768F612722BB8c2eC78aC90B3bbc","0x5AEDA56215b167893e80B4fE645BA6d5Bab767DE"]}

DEBUG    root:conftest.py:232 Using source_ethereum_address 0x627306090abab3a6e1400e9345bc60c78a8bef57 from ganache_owner_account.  (Set ETHEREUM_ADDRESS env var to set it manually)
INFO     root:test_liquidity_pools.py:227 request: EthereumToSifchainTransferRequest(sifchain_address='', sifchain_destination_address='', ethereum_address='', ethereum_private_key_env_var='ETHEREUM_PRIVATE_KEY', sifchain_symbol='ceth', ethereum_symbol='eth', ethereum_network='', amount=0, ceth_amount=0, sifchain_fees='200000rowan', smart_contracts_dir='/Users/kevindegraaf/sifnode/smart-contracts', ethereum_chain_id='5777', chain_id='localnet', manual_block_advance=True, n_wait_blocks=50, bridgebank_address='0x30753E4A8aad7F8597332E813735Def5dD395028', bridgetoken_address='0x82D50AD3C1091866E258Fd0f1a7cC9674609D254', sifnodecli_node=None, solidity_json_path='/Users/kevindegraaf/sifnode/smart-contracts/build/contracts', check_wait_blocks=False)
DEBUG    root:test_utilities.py:117 execute shell command:
uuidgen
DEBUG    root:test_utilities.py:121 execute shell command stdout:
E478E7A4-8CCA-4DD4-BE4A-2295A23EB02E

DEBUG    root:test_utilities.py:117 execute shell command:
 sifnoded keys add E478E7A4-8CCA-4DD4-BE4A-2295A23EB02E --home /Users/kevindegraaf/.sifnodecli --keyring-backend test --output json 2>&1
DEBUG    root:test_utilities.py:121 execute shell command stdout:
{"name":"E478E7A4-8CCA-4DD4-BE4A-2295A23EB02E","type":"local","address":"sif134qf54dk0mjv6wucx04d5t2z2j38nfeplq3fmk","pubkey":"sifpub1addwnpepqwv2pq55stvmdt68mdwdqx94eeuxmnqpa3ztjvf83k08fp3u7dmnkr7nyfv","mnemonic":"matrix escape item trigger you lizard train risk clerk patient initial hazard myself repeat riot note hello seminar tomato forward lounge this digital exist"}

DEBUG    root:pytest_utilities.py:55 transfer 1000000000000000000 rowan to sif134qf54dk0mjv6wucx04d5t2z2j38nfeplq3fmk from sif1jqt83antt7q0wu4ltq6sg0jc2ds2mn3a90lpj6
DEBUG    root:test_utilities.py:339 send_from_sifchain_to_sifchain EthereumToSifchainTransferRequest(sifchain_address='sif1jqt83antt7q0wu4ltq6sg0jc2ds2mn3a90lpj6', sifchain_destination_address='sif134qf54dk0mjv6wucx04d5t2z2j38nfeplq3fmk', ethereum_address='', ethereum_private_key_env_var='ETHEREUM_PRIVATE_KEY', sifchain_symbol='rowan', ethereum_symbol='eth', ethereum_network='', amount=1000000000000000000, ceth_amount=0, sifchain_fees='200000rowan', smart_contracts_dir='/Users/kevindegraaf/sifnode/smart-contracts', ethereum_chain_id='5777', chain_id='localnet', manual_block_advance=True, n_wait_blocks=50, bridgebank_address='0x30753E4A8aad7F8597332E813735Def5dD395028', bridgetoken_address='0x82D50AD3C1091866E258Fd0f1a7cC9674609D254', sifnodecli_node=None, solidity_json_path='/Users/kevindegraaf/sifnode/smart-contracts/build/contracts', check_wait_blocks=False) SifchaincliCredentials(keyring_passphrase='Ve6WxjIPTDfXpEaOiN4MlAFU5Lt7ru9K', keyring_backend='file', from_key='sif1jqt83antt7q0wu4ltq6sg0jc2ds2mn3a90lpj6', sifnodecli_homedir='/Users/kevindegraaf/sifnode/deploy/networks/validators/localnet/muddy-pine/.sifnodecli')
DEBUG    root:test_utilities.py:117 execute shell command:
yes Ve6WxjIPTDfXpEaOiN4MlAFU5Lt7ru9K |  sifnoded tx bank send sif1jqt83antt7q0wu4ltq6sg0jc2ds2mn3a90lpj6 sif134qf54dk0mjv6wucx04d5t2z2j38nfeplq3fmk --keyring-backend file --chain-id localnet  1000000000000000000rowan --fees 200000rowan --home /Users/kevindegraaf/sifnode/deploy/networks/validators/localnet/muddy-pine/.sifnodecli --gas auto
DEBUG    root:test_utilities.py:121 execute shell command stdout:


DEBUG    root:test_utilities.py:123 
execute shell command stderr:
Error: The specified item could not be found in the keyring
Usage:
  sifnoded tx bank send [from_key_or_address] [to_address] [amount] [flags]

Flags:
  -a, --account-number uint      The account number of the signing account (offline mode only)
  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default "sync")
      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it
      --fees string              Fees to pay along with transaction; eg: 10uatom
      --from string              Name or address of private key with which to sign
      --gas string               gas limit to set per-transaction; set to "auto" to calculate sufficient gas automatically (default 200000)
      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)
      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)
      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)
  -h, --help                     help for send
      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default "os")
      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used
      --ledger                   Use a connected Ledger device
      --memo string              Memo to send along with transaction
      --node string              <host>:<port> to tendermint rpc interface for this chain (default "tcp://localhost:26657")
      --offline                  Offline mode (does not allow any online functionality
  -s, --sequence uint            The sequence number of the signing account (offline mode only)
      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature
      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height
  -y, --yes                      Skip tx broadcasting prompt confirmation

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/Users/kevindegraaf/.sifnoded")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
